package com.zillah.database;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class ZillahDatabaseAdapter extends SQLiteOpenHelper {
	public static final String DATABASE_NAME = "zillah.db";
	public static final int DATABASE_VERSION = 1;

	public ZillahDatabaseAdapter(Context context) {

		super(context, DATABASE_NAME, null, DATABASE_VERSION);
		// TODO Auto-generated constructor stub
	}

	@Override
	public void onCreate(SQLiteDatabase db) {
		// Create Users Table
		db.execSQL("CREATE TABLE " + UsersTable.TABLE_NAME + "("
				+ UsersTable.ID + " INTEGER PRIMARY KEY AUTOINCREMENT,"
				+ UsersTable.USER_TYPE + " TEXT," + UsersTable.FIRST_NAME
				+ " TEXT," + UsersTable.LAST_NAME + " TEXT,"
				+ UsersTable.PHONENUMBER + " VARCHAR,"
				+ UsersTable.EMAILADDRESS + " TEXT," + UsersTable.GENDER
				+ " TEXT," + UsersTable.USERNAME + " TEXT,"
				+ UsersTable.PASSWORD + " TEXT" + ");");

		// Create Designs Table
		db.execSQL("CREATE TABLE " + DesignsTable.TABLE_NAME + "("
				+ DesignsTable.DESIGN_ID
				+ " INTEGER PRIMARY KEY AUTOINCREMENT,"
				+ DesignsTable.DESIGN_NAME + " TEXT" + ");");
	}

	@Override
	public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
		// TODO Auto-generated method stub

	}

	// Wrapper method for adding a new design
	public long addDesign(String design_name) {

		ContentValues designs = new ContentValues();
		designs.put(DesignsTable.DESIGN_NAME, design_name);
		SQLiteDatabase db = getWritableDatabase();
		long results = db.insert(DesignsTable.DESIGN_NAME,
				DesignsTable.DESIGN_NAME, designs);

		return results;

	}

	// Wrapper method for adding a new user
	public long addUser(String first_name, String last_name, int gender,
			int user_type, String phone_number, String email_address,
			String username, String password) {

		ContentValues users = new ContentValues();
		users.put(UsersTable.USER_TYPE, user_type);
		users.put(UsersTable.FIRST_NAME, first_name);
		users.put(UsersTable.LAST_NAME, last_name);
		users.put(UsersTable.GENDER, gender);
		users.put(UsersTable.PHONENUMBER, phone_number);
		users.put(UsersTable.EMAILADDRESS, email_address);
		users.put(UsersTable.USERNAME, username);
		users.put(UsersTable.PASSWORD, password);

		SQLiteDatabase db = getWritableDatabase();
		long result = db.insert(UsersTable.TABLE_NAME, UsersTable.USER_TYPE,
				users);

		return result;

	}

	// User Sign in
	public String userSignin(String username) {
		SQLiteDatabase db = getWritableDatabase();
		Cursor cursor = db.query(UsersTable.TABLE_NAME, null,
				UsersTable.USERNAME + "=?", new String[] { username }, null,
				null, null);
		if (cursor.getCount() < 1) {
			cursor.close();
			return "User Does Not Exist";
		}
		cursor.moveToFirst();
		String password = cursor.getString(cursor
				.getColumnIndex(UsersTable.PASSWORD));

		return password;

	}
	
	public Cursor listDesigns(){
		SQLiteDatabase db = getWritableDatabase();
		Cursor designs = db.query(DesignsTable.TABLE_NAME, new String[]{DesignsTable.DESIGN_ID,  DesignsTable.DESIGN_NAME}, null, null, null, null, null);
		return designs;
		
	}

}
